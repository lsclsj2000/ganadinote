<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ganadinote.common.file.FileMapper">
	<resultMap id="fileResultMap" type="ganadinote.common.domain.FileMetaData">
		<result property="fileId"      column="file_id"/>
		<result property="postId"      column="post_id"/>
		<result property="fileOrgnlNm" column="file_orgnl_nm"/>
		<result property="fileStoredNm" column="file_stored_nm"/>
		<result property="filePath"    column="file_path"/>
		<result property="fileSize"    column="file_size"/>
		<result property="postType"    column="post_type"/>
	</resultMap>

	<delete id="deleteFileByIdx" parameterType="int">
		DELETE FROM `file`
		WHERE file_id = #{fileId}
	</delete>
	
	<select id="getFileInfoByIdx" parameterType="int" resultMap="fileResultMap">
		SELECT file_id, post_id, file_orgnl_nm, file_stored_nm, file_path, file_size
		FROM `file`
		WHERE file_id = #{fileId}
	</select>
	
	<select id="getFileList" resultMap="fileResultMap">
		SELECT file_id, post_id, file_orgnl_nm, file_stored_nm, file_path, file_size
		FROM `file`
	</select>
	
	<!-- 단일 insert: AUTO_INCREMENT file_id는 넣지 않는다 -->
	<insert id="addfile" parameterType="ganadinote.common.domain.FileMetaData">
		INSERT INTO `file` (post_id, file_orgnl_nm, file_stored_nm, file_path, file_size, file_reg_date, post_type)
		VALUES (#{postId}, #{fileOrgnlNm}, #{fileStoredNm}, #{filePath}, #{fileSize}, NOW(), #{postType})
	</insert>
	
	<!-- 다중 insert -->
	<insert id="addfiles" parameterType="java.util.List">
		INSERT INTO `file` (post_id, file_orgnl_nm, file_stored_nm, file_path, file_size, file_reg_date, post_type)
		VALUES
		<foreach collection="list" item="f" separator=",">
			(#{f.postId}, #{f.fileOrgnlNm}, #{f.fileStoredNm}, #{f.filePath}, #{f.fileSize}, NOW(), #{f.postType})
		</foreach>
	</insert>
  
	<select id="selectFirstFilesByPostIds" parameterType="list" resultMap="fileResultMap">
		/* myfeed - 게시물별 대표이미지 */
		WITH ranked AS (
		  SELECT f.*,
		         ROW_NUMBER() OVER (PARTITION BY f.post_id ORDER BY f.file_id ASC) AS rn
		  FROM `file` f
		  WHERE f.post_type = 'sns' 
		  		AND f.post_id IN
		  <foreach collection="list" item="pid" open="(" close=")" separator=",">
		    #{pid}
		  </foreach>
		)
		SELECT file_id, post_id, file_orgnl_nm, file_stored_nm, file_path, file_size
		FROM ranked
		WHERE rn = 1
	</select>
	

	
	<update id="bindFilesToPostByPaths">
	  UPDATE `file`
	  SET post_id = #{postId}
	  WHERE post_id IS NULL
	    AND file_path IN
	    <foreach collection="paths" item="p" open="(" separator="," close=")">
	      #{p}
	    </foreach>
	    AND file_reg_date >= DATE_SUB(NOW(), INTERVAL 1 DAY)
	</update>

	<select id="selectAllFilesByPostIds" parameterType="list" resultMap="fileResultMap">
	    /* sns - 게시물의 전체 이미지 */
	    SELECT file_id, post_id, file_orgnl_nm, file_stored_nm, file_path, file_size
	    FROM `file`
	    WHERE post_type = 'sns'
			  AND post_id IN
	    <foreach collection="list" item="pid" open="(" separator="," close=")">
	        #{pid}
	    </foreach>
	    ORDER BY post_id, file_id
	</select>
	
	<select id="selectFilesByPostId" resultMap="fileResultMap">
		/* sns - 삭제 대상 확인 */
		SELECT file_id, post_type, post_id, file_orgnl_nm, file_stored_nm, file_path, file_size
		FROM `file`
		WHERE post_type = #{postType}
		  AND post_id   = #{postId}
		ORDER BY file_id
	</select>
	
	<delete id="deleteFilesByPostId">
		/* sns - 게시물 파일 삭제 */
		DELETE FROM `file`
		WHERE post_type = #{postType}
		  AND post_id   = #{postId}
	</delete>


</mapper>