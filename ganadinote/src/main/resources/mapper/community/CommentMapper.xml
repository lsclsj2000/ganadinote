<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ganadinote.community.mapper.CommentMapper">

  <!-- DTO 필드 주의:
       CommentRegDate/CommentStatus 처럼 대문자로 시작해도
       MyBatis property는 commentRegDate/commentStatus 로 써야 매핑됨 -->
  <resultMap id="CommentMap" type="ganadinote.community.dto.CommentDTO">
    <id     column="comment_id"         property="commentId"/>
    <result column="post_id"            property="postId"/>
    <!-- parentId가 DTO에서 Long이면 아래처럼 CAST -->
    <result column="parentId"           property="parentId"/>
    <result column="mbr_cd"             property="mbrCd"/>
    <result column="mbr_nicknm"         property="mbrNknm"/>
    <result column="comment_ctnt"       property="commentCtnt"/>
    <result column="comment_reg_date"   property="commentRegDate"/>
    <result column="comment_status"     property="commentStatus"/>
  </resultMap>

  <!-- 목록 조회 -->
  <select id="findAllByPostId" resultMap="CommentMap">
    SELECT
      c.comment_id,
      c.post_id,
      /* comment_parent_id(VARCHAR) → Long 매핑을 위해 CAST */
      CAST(c.comment_parent_id AS SIGNED) AS parentId,
      c.mbr_cd,
      m.mbr_nicknm,
      c.comment_ctnt,
      c.comment_reg_date,
      c.comment_status
    FROM comment c
    LEFT JOIN member m ON m.mbr_cd = c.mbr_cd
    WHERE c.post_id = #{postId}
      AND (c.comment_status IS NULL OR c.comment_status != 'DELETE')
    ORDER BY COALESCE(NULLIF(c.comment_parent_id,''), c.comment_id+0), c.comment_id
    LIMIT #{limit} OFFSET #{offset}
  </select>

  <!-- 생성 -->
  <insert id="insertComment" parameterType="ganadinote.community.dto.CommentDTO"
          useGeneratedKeys="true" keyProperty="commentId">
    INSERT INTO comment
      (post_id, comment_parent_id, mbr_cd, comment_ctnt, comment_reg_date, comment_status)
    VALUES
      (#{postId},
       /* DTO parentId가 Long이더라도 컬럼은 VARCHAR 이므로 VARCHAR로 넣음 */
       #{parentId, jdbcType=VARCHAR},
       /* DTO mbrCd가 String이라면 정수형 힌트 */
       #{mbrCd, jdbcType=INTEGER},
       #{commentCtnt},
       NOW(),
       'ACTIVE')
  </insert>

  <!-- 소프트 삭제 -->
  <update id="markCommentDeleted">
    UPDATE comment
       SET comment_status='DELETE', comment_mdfcn_date=NOW()
     WHERE comment_id=#{commentId}
       AND mbr_cd=#{mbrCd, jdbcType=INTEGER}
  </update>

</mapper>