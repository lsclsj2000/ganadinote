<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ganadinote.community.mapper.CommunityMapper">

	<select id="selectPostListBasic"
		resultType="ganadinote.community.dto.PostListDTO"> 
		SELECT 
			p.post_id AS postId, 
			c.category_id AS categoryId, 
			c.category_nm AS categoryNm, 
			p.post_ttl AS postTtl,
			LEFT(COALESCE(p.post_ctnt,''),120) AS postCtnt, 
			m.mbr_nknm AS mbrNknm,
			p.post_reg_date AS postRegDate,
			p.post_view_count AS postViewCount, 
			p.post_like_count AS postLikeCount,
			(SELECT COUNT(*) FROM `comment` cm WHERE cm.post_id = p.post_id) AS cmtCount 
		FROM post p JOIN member m ON m.mbr_cd = p.mbr_cd JOIN category
		c ON c.category_id = p.category_id <where>
			<if test="categoryId != null"> AND c.category_id = #{categoryId} </if>
		</where>
		ORDER BY p.post_id DESC LIMIT #{size} OFFSET #{offset} </select>

	<!-- 총 개수 (페이징용) -->
	<select id="countPostListBasic" resultType="int"> SELECT COUNT(*) FROM post
		p INNER JOIN category c ON p.category_id = c.category_id <where>
			<if test="categoryId != null"> AND c.category_id = #{categoryId} </if>
		</where>
	</select>


	<select id="selectPostDetail"
		resultType="ganadinote.community.dto.PostDetailDTO">
		SELECT
			p.post_id AS postId,
			p.category_id AS categoryId,
			c.category_nm AS categoryNm,
			p.post_ttl AS postTtl,
			p.post_ctnt AS postCtnt,
			m.mbr_nknm AS mbrNknm,
			p.post_reg_date AS postRegDate,
			p.post_view_count AS postViewCount,
			p.post_like_count AS postLikeCount,
			(SELECT COUNT(*) FROM comment cm WHERE cm.post_id = p.post_id) AS cmtCount
		FROM post p
		JOIN category c ON c.category_id = p.category_id
		JOIN member m ON m.mbr_cd = p.mbr_cd
		WHERE p.post_id = #{postId}
	</select>

	<select id="selectComments" resultType="ganadinote.common.domain.Comment">
		SELECT
			c.comment_id AS commentId,
			c.comment_parent_id AS commentParentId,
			c.post_id AS postId,
			c.comment_ctnt AS commentCtnt,
			m.mbr_nknm AS authorNickname,
			c.comment_reg_date AS commentRegDate
		FROM comment c
		JOIN member m ON m.mbr_cd = c.mbr_cd
		WHERE c.post_id = #{postId}
		ORDER BY
		CASE WHEN c.comment_parent_id IS NULL THEN 0 ELSE 1 END,
		c.comment_id
	</select>

	<!-- 댓글/대댓글 등록 -->
	<insert id="insertComment">
	  INSERT INTO comment (post_id, comment_parent_id, mbr_cd, comment_ctnt, comment_reg_date)
	  VALUES (#{postId}, #{commentParentId}, #{mbrCd}, #{commentCtnt}, NOW())
	</insert>

</mapper>







