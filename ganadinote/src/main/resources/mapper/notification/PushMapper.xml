<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ganadinote.notification.mapper.PushMapper">

<resultMap id="petWithBreedResultMap" 		type="ganadinote.notification.domain.PetWithBreedDTO">
        <result column="breed_name" 		property="breedName"/>
        <result column="min_temp" 			property="minTemp"/>
        <result column="max_temp" 			property="maxTemp"/>
        <result column="cold_sensitive" 	property="coldSensitive"/>
        <result column="heat_sensitive" 	property="heatSensitive"/>
        <result column="dog_size" 			property="dogSize"/>
        <result column="activity_level" 	property="activityLevel"/>
    </resultMap>
    
    <select id="getPetInfoForNotification" resultMap="petWithBreedResultMap">
    	/*  mbrCd를 통해 받아오는 알림을 위한 pet 정보*/
       SELECT 
	        p.pet_name AS petName,
	        p.pet_weight AS petWeight,
	        db.breed_name AS petBreed,
	        db.min_temp AS minTemp,
	        db.max_temp AS maxTemp,
	        db.cold_sensitive AS coldSensitive,
	        db.heat_sensitive AS heatSensitive,
	        db.dog_size AS dogSize,
	        db.activity_level AS activityLevel
	    FROM 
	        pet AS p
	    LEFT JOIN 
	        dog_breed AS db ON p.pet_breed = db.breed_name
	    WHERE
	    	p.mbr_cd = #{mbrCd};
    </select>
    
    <select id="getSubInfoByMbrCd" resultType="ganadinote.common.domain.PushSubscription">
    	/* 알림 구독 정보 멤버 코드로 받아오기 */
		SELECT
		    id,
		    mbr_cd,
		    endpoint,
		    p256dh,
		    auth,
		    created_at
		FROM 
		    push_subscription
		WHERE
		    mbr_cd = #{mbrCd}
    </select>
    
    <select id="isSubscriptionActive" parameterType="int" resultType="boolean">
    	/* mbr_cd와 is_active=1 조건을 만족하는 레코드를 찾습니다. */
        SELECT
            COUNT(*) > 0
        FROM
            push_subscription
        WHERE
            mbr_cd = #{mbrCd} AND is_active = 1
    </select>
    
    <select id="getSubscriptionByEndpoint" parameterType="String" resultType="int">
    
        SELECT 
        	COUNT(*) 
        FROM 
        	push_subscription
        WHERE 
        	endpoint = #{endpoint}
    </select>
    
    <insert id="addSubscription" parameterType="ganadinote.notification.domain.PushSubDTO">
        INSERT INTO 
        	push_subscription 
        		(mbr_cd, endpoint, p256dh, auth, is_active)
        VALUES 
        (#{mbrCd}, #{endpoint}, #{p256dh}, #{auth}, 1)
    </insert>

    <update id="updateSubscription" parameterType="ganadinote.notification.domain.PushSubDTO">
        UPDATE 
        	push_subscription
        SET 
        	is_active = 1, p256dh = #{p256dh}, auth = #{auth}
        WHERE 
        	endpoint = #{endpoint} AND mbr_cd = #{mbrCd}
    </update>
    
      <update id="deactivateSubscription" parameterType="int">
    	/* 회원 코드로 알림 구독 비활성화 */
        UPDATE
            push_subscription
        SET
            is_active = 0
        WHERE
            mbr_cd = #{mbrCd}
    </update>
</mapper>